global class DailyLeadProcessor implements Schedulable{
  
     global void execute(SchedulableContext SC){
          
        List<Lead> leads = [select Id,LastName,LeadSource From Lead where LeadSource=null LIMIT 200];
      
        List<Lead> listOfUpdates = new List<Lead>();
        if(!leads.isEmpty()){
            for(Lead l : leads){
                l.LeadSource = 'Dreamforce';
                listOfUpdates.add(l);
            }
          
            update listOfUpdates;
        }
        System.debug('Total Records are :'+ listOfUpdates.size());
    }
}

@isTest
public class DailyLeadProcessorTest{
    
    public static testMethod void positiveScenario(){
      
        String Cron_Exp = '0 0 1 * * ?';
        List<Lead> leadList = new List<Lead>();
        for(Integer i=0; i<200; i++){
            leadList.add(new Lead(LastName = 'Mayank'+i,Company = 'Dell',Status = 'Working'));
          
       }
        insert leadList;      
      
        Test.startTest();
        System.schedule('DailyLeadProcessor',Cron_Exp,new DailyLeadProcessor());
        Test.stopTest();
      
        List<Lead> checkList = [select Id,LeadSource from Lead where Id =:leadList];
      
        List<Lead> updatedList = new List<Lead>();
            for(Lead l : checkList){
                if(l.LeadSource == null){
                  
                    l.LeadSource = 'Dreamforce';
                    updatedList.add(l);
            }
        }
        update updatedList;
      
        System.assertEquals(200,checkList.size());
      
      
   }
}